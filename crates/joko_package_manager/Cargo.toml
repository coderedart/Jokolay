[package]
name = "joko_package_manager"
version = "0.2.1"
edition = "2021"


[dependencies]
# jmf deps
# for marker packs 
base64 = "0.21.2"
bytemuck = { workspace = true }
cap-std = { workspace = true }
cxx = { version = "1.0", features = ["std"] } # for rapid xml bindings
data-encoding = "2.4.0"
egui = { workspace = true }
enumflags2 = { workspace = true }
glam = { workspace = true }
image = { version = "0.24", default-features = false, features = ["png"] } # for dealing with png files in marker packs. 
indexmap = { workspace = true, features = ["serde"]} # to keep the order of files inside zip. markers packs rely on some files like aaa.xml being read first for marker category order# for representing the paths of files inside xml pack zip
itertools = { workspace = true }
joko_core = { path = "../joko_core" }
joko_component_models = { path = "../joko_component_models" }
joko_render_models = { path = "../joko_render_models" }
joko_package_models = { path = "../joko_package_models" }
joko_ui_models = { path = "../joko_ui_models" }
jokoapi = { path = "../jokoapi" }
joko_link_models = { path = "../joko_link_models" }
miette = { workspace = true }
once = {workspace = true}
ordered_hash_map = { workspace = true }
paste = { workspace = true }
phf = { version = "*", features = ["macros"] }
rayon = { workspace = true }
rfd = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
smol_str = { workspace = true }
time = { workspace = true , features = ["serde"]}
tokio = { workspace = true }
tracing = { workspace = true }
url = { workspace = true }
uuid = { version = "1", features = ["v4", "fast-rng", "macro-diagnostics", "serde"] }
xot = { version = "0.16.0" }
zip = { version = "0.6", default-features = false, features = ["deflate"] } # for easier extraction to folers and compression of folders into zip files (.taco format alias)
walkdir = "2.5.0"




[dev-dependencies]
# jmf deps
rstest = { version = "0", default-features = false }
# rstest_reuse = "0.3.0"
similar-asserts = "1"


[build-dependencies]
# for rapidxml
cxx-build = { version = "1" }
